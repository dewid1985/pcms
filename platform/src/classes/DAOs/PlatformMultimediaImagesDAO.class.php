<?php

/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1.master at 2015-03-16 08:51:34                    *
 *   This file will never be generated again - feel free to edit.            *
 *****************************************************************************/
class PlatformMultimediaImagesDAO extends AutoPlatformMultimediaImagesDAO
{
    /**
     * @return string
     */
    public function getSequence()
    {
        return parent::getSequence() . '_seq';
    }

    /**
     * @param $id
     * @param int $expires
     * @return  PlatformMultimediaImages
     */
    public function getById($id, $expires = Cache::EXPIRES_MEDIUM)
    {
        return parent::getById($id, $expires);
    }


    /**
     * @param ModuleMultimediaSearchOperationRequest $request
     * @return array
     */
    public function getBySearchOperationRequest(ModuleMultimediaSearchOperationRequest $request)
    {
        $select = OSQL::select()
            ->get(SQLFunction::create('count', 'id'))
            ->from(PlatformMultimediaCroppedImages::dao()->getTable(), 'mci')
            ->where(Expression::eq('"mci"."images_id"', '"multimedia"."images"."id"'));


        $criteria = Criteria::create($this)
            ->addProjection(Projection::property('id', 'id'))
            ->addProjection(Projection::property('title'))
            ->addProjection(Projection::property('description'))
            ->addProjection(Projection::property('icoFile'))
            ->addProjection(Projection::property(PlatformDialectString::create(
                'to_char("multimedia"."images"."uploaded_at"::timestamptz ,\'YYYY-MM-DD HH24:MI\') as "uploaded_at"'
            )))
            ->addProjection(
                Projection::property(
                    PlatformDialectString::create('count("multimedia"."images"."id") OVER ()')
                )
            )
            ->addProjection(
                Projection::property(
                    PlatformDialectString::create('(' . $select->toString() . ') as "count_cropped"')
                )
            )
            ->addOrder(OrderBy::create('id')->desc())
            ->setLimit($request->getLimit())
            ->setOffset($request->getOffset());

        $textSearchBlock = Expression::orBlock();

        if (!is_null($request->getTitle()))
            $textSearchBlock->expOr(
                Expression::fullTextOr(
                    PlatformDialectString::create('"multimedia"."images"."title"'),
                    array_map(
                        function ($parse) {
                            return trim($parse);
                        }, explode(',', $request->getTitle())
                    )
                )
            );

        if (!is_null($request->getDescription()))
            $textSearchBlock->expOr(
                Expression::fullTextOr(
                    PlatformDialectString::create('"multimedia"."images"."description"'),
                    array_map(
                        function ($parse) {
                            return trim($parse);
                        }, explode(',', $request->getDescription())
                    )
                )
            );

        if (!is_null($request->getTags()))
            $textSearchBlock->expOr(
                Expression::fullTextOr(
                    PlatformDialectString::create('"multimedia"."images"."tags"'),
                    array_map(
                        function ($parse) {
                            return trim($parse);
                        }, explode(',', $request->getTags())
                    )
                )
            );

        if ($textSearchBlock->getSize() != 0)
            $criteria
                ->add($textSearchBlock);


        if ($request->getOfUploadedAt() && $request->getToUploadedAt())
            $criteria
                ->add(
                    Expression::gt('uploadedAt', $request->getOfUploadedAt())
                )
                ->add(
                    Expression::lt('uploadedAt', $request->getToUploadedAt())
                );

        if (is_null($request->getOfUploadedAt()) && $request->getToUploadedAt())
            $criteria->add(
                Expression::lt('uploadedAt', $request->getToUploadedAt())
            );

        if ($request->getOfUploadedAt() && is_null($request->getToUploadedAt()))
            $criteria->add(
                Expression::gt('uploadedAt', $request->getOfUploadedAt())
            );


        return $criteria->getCustomList();
    }

    // your brilliant stuff goes here
}

?>