<?php

/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1.master at 2016-01-13 11:44:57                    *
 *   This file will never be generated again - feel free to edit.            *
 *****************************************************************************/
class PlatformSocialApp extends AutoPlatformSocialApp implements Prototyped, DAOConnected
{
    /**
     * @return PlatformSocialApp
     **/
    public static function create()
    {
        return new self;
    }

    /**
     * @return PlatformSocialAppDAO
     **/
    public static function dao()
    {
        return Singleton::getInstance('PlatformSocialAppDAO');
    }

    /**
     * @return ProtoPlatformSocialApp
     **/
    public static function proto()
    {
        return Singleton::getInstance('ProtoPlatformSocialApp');
    }

    /**
     * @return PlatformSocialApp|null
     */
    public function add()
    {
        try {
            $response = self::dao()->add($this);
        } catch (Exception $e) {
            return null;
        }
        return $response;
    }

    /**
     * @return PlatformSocialAppAdmin|null
     */
    public function getAppAdmin()
    {
        try {
            return (new PlatformSocialAppAdmin)
                ->dao()->getByApp($this);

        }catch(ObjectNotFoundException $e)
        {
            return null;
        }
    }

    public function drop()
    {
        try {
            (new self)->dao()->drop($this);
        }catch(Exception $e)
        {
            return null;
        }
    }


    public function getIco()
    {
        /** @var PlatformArray $array */
        $array = (new Platform())->getConfig()->getItemConfig('UpProvider')->getItem('LocalStore');

        $ico = $array->getValueByKey('path') . 'app/' . $this->getAppId() . '/' . 'ico_'. $this->getCreatedAt()->toStamp();

        if(is_file($file = $ico.'.jpeg'))
        {
            return $array->getValueByKey('host').'app/'. $this->getAppId() . '/' . 'ico_'. $this->getCreatedAt()->toStamp().'.jpeg';
        }

        return  $array->getValueByKey('host').'app/'. $this->getAppId() . '/' . 'ico_'. $this->getCreatedAt()->toStamp().'.png';
    }

    public function update()
    {
        try {
            (new self)->dao()->save($this);
        }catch(Exception $e)
        {
            return null;
        }
    }
    // your brilliant stuff goes here
}

?>