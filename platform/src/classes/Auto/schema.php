<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1.master at 2016-04-11 09:08:09                    *
 *   This file is autogenerated - do not edit.                               *
 *****************************************************************************/

	$schema = new DBSchema();
	
	$schema->
		addTable(
			DBTable::create('common.article')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'project_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'article_draft_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'article_published_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true),
					'created_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true),
					'published_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN),
					'published'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('common.article_draft')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'article_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'admin_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'title'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'anons'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'text'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'author'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'meta_description'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'meta_keywords'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'rubrics'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true),
					'modified_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'preview'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'images'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('common.article_published')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'admin_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'title'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'anons'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'text'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'author'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'meta_description'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'meta_keywords'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'rubrics'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true),
					'modified_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'preview'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'images'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('common.news')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'project_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'news_draft_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'news_published_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true),
					'created_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true),
					'published_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN),
					'published'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('common.news_draft')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'news_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'admin_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'title'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'anons'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'text'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'meta_description'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'meta_keywords'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'rubrics'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true),
					'modified_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'preview'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('common.news_published')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'admin_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'title'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'anons'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'text'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'meta_description'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'meta_keywords'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'rubrics'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true),
					'modified_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'preview'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('common.project')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(31),
					'name'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(127),
					'title'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('common.module')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(32),
					'name'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(32),
					'title'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('common.project_module')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'module_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'project_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN),
					'disabled'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('common.rubric')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'project_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'rubric_data_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'name'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'path'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'enabled'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true),
					'created_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true),
					'modified_at'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('common.rubric_data')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'short_name'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'meta_keywords'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'meta_description'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'description'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('logs.admin_auth_logs')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN),
					'system_user'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'admin_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true),
					'entry_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(64),
					'login'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(256),
					'password'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(15),
					'ip'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(16),
					'captcha'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN),
					'blocked_ip'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true),
					'date_blocking_ip'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'black_ip_list_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN),
					'successful'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'white_ip_list_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'admin_code_id'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('users.admin')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(32),
					'login'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(256),
					'password'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(32),
					'email'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(16),
					'phone'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(40),
					'xmpp_account'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN),
					'blocked'
				)->
				setDefault(false)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('users.admin_code')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(32),
					'code'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true)->
					setNull(false),
					'created_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN),
					'active'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'type_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'user_id'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('users.admin_profile')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'admin_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(64),
					'last_name'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(64),
					'first_name'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(64),
					'middle_name'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true)->
					setNull(false),
					'created_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true)->
					setNull(false),
					'password_expires_time'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'alias'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'settings'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(256),
					'status'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('users.admin_role')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'admin_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'role_id'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('users.auth_common')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'user_info_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'auth_type_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(128),
					'token'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(128),
					'refresh_token'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(128),
					'profile_url'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('users.auth_type')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(64),
					'name'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'settings'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('users.role')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'name'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('users.user_registration_facts')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'user_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'project_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true)->
					setNull(false),
					'registred_at'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('users.user')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(128),
					'email'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(256),
					'password'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(32),
					'nickname'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'deleted'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'moderation'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN),
					'banned'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('users.user_info')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'user_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(64),
					'last_name'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(64),
					'first_name'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(64),
					'middle_name'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true)->
					setNull(false),
					'birthday'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'settings'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'open_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true)->
					setNull(false),
					'registred_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true)->
					setNull(false),
					'created_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'registred'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true),
					'last_login'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(256),
					'signature'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'preview'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'preview_image_type_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'phone'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('users.module_operation')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'module_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'role_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(32),
					'name'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('users.black_ip_list')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(15),
					'ip_address'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true),
					'expires'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN),
					'active'
				)->
				setDefault(true)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('users.white_ip_list')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(15),
					'ip_address'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN),
					'active'
				)->
				setDefault(true)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('multimedia.images')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(512),
					'name'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(512),
					'title'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(1024),
					'description'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(512),
					'tags'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(128),
					'mime_type'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(256),
					'source_file'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(256),
					'prepared_file'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(256),
					'ico_file'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true),
					'uploaded_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(256),
					'root_directory'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('multimedia.cropped_images')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'images_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'images_size_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(256),
					'path'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true),
					'cropped_at'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('multimedia.images_size')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(32),
					'name'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(32),
					'title'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::INTEGER),
					'width'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::INTEGER),
					'height'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('multimedia.unsorted')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(256),
					'tags'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'description'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(512),
					'title'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true),
					'created_at'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('social.app')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'created_admin_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(32),
					'name'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'social_network'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'app_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'app_secret_key'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true)->
					setNull(false),
					'created_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN),
					'picture'
				)->
				setDefault(false)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('social.app_admin')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'app_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'app_access_token'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'name'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'social_admin_id'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('social.app_admin_group')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'app_admin_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'name'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'privacy'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'group_id'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('social.app_admin_pages')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'app_admin_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'name'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'category'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'page_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'access_token'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'permissions'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('social.flow')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(256),
					'name'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'access_token'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'secret_key'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN),
					'deleted'
				)->
				setDefault(false)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('social.flow_dimension_group')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'flow_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'group_id'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('social.flow_dimension_page')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'flow_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'page_id'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('social.published_link')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'flow_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(256),
					'description'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(512),
					'link_url'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(512),
					'img_url'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN),
					'published'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true),
					'published_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMPTZ)->setTimezoned(true),
					'created_at'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('social.published_data')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'published_link_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'app_admin_pages_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'app_admin_group_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'social_network'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(512),
					'post_id'
				)
			)
		);
	
	// common.article.project_id -> common.project.id
	$schema->
		getTableByName('common.article')->
		getColumnByName('project_id')->
		setReference(
			$schema->
				getTableByName('common.project')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// common.article.article_draft_id -> common.article_draft.id
	$schema->
		getTableByName('common.article')->
		getColumnByName('article_draft_id')->
		setReference(
			$schema->
				getTableByName('common.article_draft')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// common.article.article_published_id -> common.article_published.id
	$schema->
		getTableByName('common.article')->
		getColumnByName('article_published_id')->
		setReference(
			$schema->
				getTableByName('common.article_published')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// common.article_draft.article_id -> common.article.id
	$schema->
		getTableByName('common.article_draft')->
		getColumnByName('article_id')->
		setReference(
			$schema->
				getTableByName('common.article')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// common.article_draft.admin_id -> users.admin.id
	$schema->
		getTableByName('common.article_draft')->
		getColumnByName('admin_id')->
		setReference(
			$schema->
				getTableByName('users.admin')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// common.article_published.admin_id -> users.admin.id
	$schema->
		getTableByName('common.article_published')->
		getColumnByName('admin_id')->
		setReference(
			$schema->
				getTableByName('users.admin')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// common.news.project_id -> common.project.id
	$schema->
		getTableByName('common.news')->
		getColumnByName('project_id')->
		setReference(
			$schema->
				getTableByName('common.project')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// common.news.news_draft_id -> common.news_draft.id
	$schema->
		getTableByName('common.news')->
		getColumnByName('news_draft_id')->
		setReference(
			$schema->
				getTableByName('common.news_draft')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// common.news.news_published_id -> common.news_published.id
	$schema->
		getTableByName('common.news')->
		getColumnByName('news_published_id')->
		setReference(
			$schema->
				getTableByName('common.news_published')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// common.news_draft.news_id -> common.news.id
	$schema->
		getTableByName('common.news_draft')->
		getColumnByName('news_id')->
		setReference(
			$schema->
				getTableByName('common.news')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// common.news_draft.admin_id -> users.admin.id
	$schema->
		getTableByName('common.news_draft')->
		getColumnByName('admin_id')->
		setReference(
			$schema->
				getTableByName('users.admin')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// common.news_published.admin_id -> users.admin.id
	$schema->
		getTableByName('common.news_published')->
		getColumnByName('admin_id')->
		setReference(
			$schema->
				getTableByName('users.admin')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// common.project_module.module_id -> common.module.id
	$schema->
		getTableByName('common.project_module')->
		getColumnByName('module_id')->
		setReference(
			$schema->
				getTableByName('common.module')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// common.project_module.project_id -> common.project.id
	$schema->
		getTableByName('common.project_module')->
		getColumnByName('project_id')->
		setReference(
			$schema->
				getTableByName('common.project')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// common.rubric.project_id -> common.project.id
	$schema->
		getTableByName('common.rubric')->
		getColumnByName('project_id')->
		setReference(
			$schema->
				getTableByName('common.project')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// common.rubric.rubric_data_id -> common.rubric_data.id
	$schema->
		getTableByName('common.rubric')->
		getColumnByName('rubric_data_id')->
		setReference(
			$schema->
				getTableByName('common.rubric_data')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// logs.admin_auth_logs.admin_id -> users.admin.id
	$schema->
		getTableByName('logs.admin_auth_logs')->
		getColumnByName('admin_id')->
		setReference(
			$schema->
				getTableByName('users.admin')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// logs.admin_auth_logs.black_ip_list_id -> users.black_ip_list.id
	$schema->
		getTableByName('logs.admin_auth_logs')->
		getColumnByName('black_ip_list_id')->
		setReference(
			$schema->
				getTableByName('users.black_ip_list')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// logs.admin_auth_logs.white_ip_list_id -> users.white_ip_list.id
	$schema->
		getTableByName('logs.admin_auth_logs')->
		getColumnByName('white_ip_list_id')->
		setReference(
			$schema->
				getTableByName('users.white_ip_list')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// logs.admin_auth_logs.admin_code_id -> users.admin_code.id
	$schema->
		getTableByName('logs.admin_auth_logs')->
		getColumnByName('admin_code_id')->
		setReference(
			$schema->
				getTableByName('users.admin_code')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// users.admin_code.user_id -> users.admin.id
	$schema->
		getTableByName('users.admin_code')->
		getColumnByName('user_id')->
		setReference(
			$schema->
				getTableByName('users.admin')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// users.admin_profile.admin_id -> users.admin.id
	$schema->
		getTableByName('users.admin_profile')->
		getColumnByName('admin_id')->
		setReference(
			$schema->
				getTableByName('users.admin')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// users.admin_role.admin_id -> users.admin.id
	$schema->
		getTableByName('users.admin_role')->
		getColumnByName('admin_id')->
		setReference(
			$schema->
				getTableByName('users.admin')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// users.admin_role.role_id -> users.role.id
	$schema->
		getTableByName('users.admin_role')->
		getColumnByName('role_id')->
		setReference(
			$schema->
				getTableByName('users.role')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// users.auth_common.user_info_id -> users.user_info.id
	$schema->
		getTableByName('users.auth_common')->
		getColumnByName('user_info_id')->
		setReference(
			$schema->
				getTableByName('users.user_info')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// users.auth_common.auth_type_id -> users.auth_type.id
	$schema->
		getTableByName('users.auth_common')->
		getColumnByName('auth_type_id')->
		setReference(
			$schema->
				getTableByName('users.auth_type')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// users.user_registration_facts.user_id -> users.user.id
	$schema->
		getTableByName('users.user_registration_facts')->
		getColumnByName('user_id')->
		setReference(
			$schema->
				getTableByName('users.user')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// users.user_registration_facts.project_id -> common.project.id
	$schema->
		getTableByName('users.user_registration_facts')->
		getColumnByName('project_id')->
		setReference(
			$schema->
				getTableByName('common.project')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// users.user_info.user_id -> users.user.id
	$schema->
		getTableByName('users.user_info')->
		getColumnByName('user_id')->
		setReference(
			$schema->
				getTableByName('users.user')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// users.module_operation.module_id -> common.module.id
	$schema->
		getTableByName('users.module_operation')->
		getColumnByName('module_id')->
		setReference(
			$schema->
				getTableByName('common.module')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// users.module_operation.role_id -> users.role.id
	$schema->
		getTableByName('users.module_operation')->
		getColumnByName('role_id')->
		setReference(
			$schema->
				getTableByName('users.role')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// multimedia.cropped_images.images_id -> multimedia.images.id
	$schema->
		getTableByName('multimedia.cropped_images')->
		getColumnByName('images_id')->
		setReference(
			$schema->
				getTableByName('multimedia.images')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// multimedia.cropped_images.images_size_id -> multimedia.images_size.id
	$schema->
		getTableByName('multimedia.cropped_images')->
		getColumnByName('images_size_id')->
		setReference(
			$schema->
				getTableByName('multimedia.images_size')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// social.app.created_admin_id -> users.admin.id
	$schema->
		getTableByName('social.app')->
		getColumnByName('created_admin_id')->
		setReference(
			$schema->
				getTableByName('users.admin')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// social.app_admin.app_id -> social.app.id
	$schema->
		getTableByName('social.app_admin')->
		getColumnByName('app_id')->
		setReference(
			$schema->
				getTableByName('social.app')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// social.app_admin_group.app_admin_id -> social.app_admin.id
	$schema->
		getTableByName('social.app_admin_group')->
		getColumnByName('app_admin_id')->
		setReference(
			$schema->
				getTableByName('social.app_admin')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// social.app_admin_pages.app_admin_id -> social.app_admin.id
	$schema->
		getTableByName('social.app_admin_pages')->
		getColumnByName('app_admin_id')->
		setReference(
			$schema->
				getTableByName('social.app_admin')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// social.flow_dimension_group.flow_id -> social.flow.id
	$schema->
		getTableByName('social.flow_dimension_group')->
		getColumnByName('flow_id')->
		setReference(
			$schema->
				getTableByName('social.flow')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// social.flow_dimension_group.group_id -> social.app_admin_group.id
	$schema->
		getTableByName('social.flow_dimension_group')->
		getColumnByName('group_id')->
		setReference(
			$schema->
				getTableByName('social.app_admin_group')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// social.flow_dimension_page.flow_id -> social.flow.id
	$schema->
		getTableByName('social.flow_dimension_page')->
		getColumnByName('flow_id')->
		setReference(
			$schema->
				getTableByName('social.flow')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// social.flow_dimension_page.page_id -> social.app_admin_pages.id
	$schema->
		getTableByName('social.flow_dimension_page')->
		getColumnByName('page_id')->
		setReference(
			$schema->
				getTableByName('social.app_admin_pages')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// social.published_link.flow_id -> social.flow.id
	$schema->
		getTableByName('social.published_link')->
		getColumnByName('flow_id')->
		setReference(
			$schema->
				getTableByName('social.flow')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// social.published_data.published_link_id -> social.published_link.id
	$schema->
		getTableByName('social.published_data')->
		getColumnByName('published_link_id')->
		setReference(
			$schema->
				getTableByName('social.published_link')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// social.published_data.app_admin_pages_id -> social.app_admin_pages.id
	$schema->
		getTableByName('social.published_data')->
		getColumnByName('app_admin_pages_id')->
		setReference(
			$schema->
				getTableByName('social.app_admin_pages')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// social.published_data.app_admin_group_id -> social.app_admin_group.id
	$schema->
		getTableByName('social.published_data')->
		getColumnByName('app_admin_group_id')->
		setReference(
			$schema->
				getTableByName('social.app_admin_group')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
?>