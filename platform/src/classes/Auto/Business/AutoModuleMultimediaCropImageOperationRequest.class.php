<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1.master at 2015-04-08 15:24:53                    *
 *   This file is autogenerated - do not edit.                               *
 *****************************************************************************/

	abstract class AutoModuleMultimediaCropImageOperationRequest extends ModuleMultimediaRequest
	{
		protected $images = null;
		protected $imagesId = null;
		protected $imagesSize = null;
		protected $imagesSizeId = null;
		protected $path = null;
		protected $coordinateX = null;
		protected $coordinateY = null;
		protected $width = null;
		protected $height = null;
		protected $croppedAt = null;
		
		/**
		 * @return PlatformMultimediaImages
		**/
		public function getImages()
		{
			if (!$this->images && $this->imagesId) {
				$this->images = PlatformMultimediaImages::dao()->getById($this->imagesId);
			}
			
			return $this->images;
		}
		
		public function getImagesId()
		{
			return $this->images
				? $this->images->getId()
				: $this->imagesId;
		}
		
		/**
		 * @return ModuleMultimediaCropImageOperationRequest
		**/
		public function setImages(PlatformMultimediaImages $images = null)
		{
			$this->images = $images;
			$this->imagesId = $images ? $images->getId() : null;
			
			return $this;
		}
		
		/**
		 * @return ModuleMultimediaCropImageOperationRequest
		**/
		public function setImagesId($id = null)
		{
			$this->images = null;
			$this->imagesId = $id;
			
			return $this;
		}
		
		/**
		 * @return ModuleMultimediaCropImageOperationRequest
		**/
		public function dropImages()
		{
			$this->images = null;
			$this->imagesId = null;
			
			return $this;
		}
		
		/**
		 * @return PlatformMultimediaImagesSize
		**/
		public function getImagesSize()
		{
			if (!$this->imagesSize && $this->imagesSizeId) {
				$this->imagesSize = PlatformMultimediaImagesSize::dao()->getById($this->imagesSizeId);
			}
			
			return $this->imagesSize;
		}
		
		public function getImagesSizeId()
		{
			return $this->imagesSize
				? $this->imagesSize->getId()
				: $this->imagesSizeId;
		}
		
		/**
		 * @return ModuleMultimediaCropImageOperationRequest
		**/
		public function setImagesSize(PlatformMultimediaImagesSize $imagesSize = null)
		{
			$this->imagesSize = $imagesSize;
			$this->imagesSizeId = $imagesSize ? $imagesSize->getId() : null;
			
			return $this;
		}
		
		/**
		 * @return ModuleMultimediaCropImageOperationRequest
		**/
		public function setImagesSizeId($id = null)
		{
			$this->imagesSize = null;
			$this->imagesSizeId = $id;
			
			return $this;
		}
		
		/**
		 * @return ModuleMultimediaCropImageOperationRequest
		**/
		public function dropImagesSize()
		{
			$this->imagesSize = null;
			$this->imagesSizeId = null;
			
			return $this;
		}
		
		public function getPath()
		{
			return $this->path;
		}
		
		/**
		 * @return ModuleMultimediaCropImageOperationRequest
		**/
		public function setPath($path)
		{
			$this->path = $path;
			
			return $this;
		}
		
		public function getCoordinateX()
		{
			return $this->coordinateX;
		}
		
		/**
		 * @return ModuleMultimediaCropImageOperationRequest
		**/
		public function setCoordinateX($coordinateX)
		{
			$this->coordinateX = $coordinateX;
			
			return $this;
		}
		
		public function getCoordinateY()
		{
			return $this->coordinateY;
		}
		
		/**
		 * @return ModuleMultimediaCropImageOperationRequest
		**/
		public function setCoordinateY($coordinateY)
		{
			$this->coordinateY = $coordinateY;
			
			return $this;
		}
		
		public function getWidth()
		{
			return $this->width;
		}
		
		/**
		 * @return ModuleMultimediaCropImageOperationRequest
		**/
		public function setWidth($width)
		{
			$this->width = $width;
			
			return $this;
		}
		
		public function getHeight()
		{
			return $this->height;
		}
		
		/**
		 * @return ModuleMultimediaCropImageOperationRequest
		**/
		public function setHeight($height)
		{
			$this->height = $height;
			
			return $this;
		}
		
		/**
		 * @return TimestampTZ
		**/
		public function getCroppedAt()
		{
			return $this->croppedAt;
		}
		
		/**
		 * @return ModuleMultimediaCropImageOperationRequest
		**/
		public function setCroppedAt(TimestampTZ $croppedAt = null)
		{
			$this->croppedAt = $croppedAt;
			
			return $this;
		}
		
		/**
		 * @return ModuleMultimediaCropImageOperationRequest
		**/
		public function dropCroppedAt()
		{
			$this->croppedAt = null;
			
			return $this;
		}
	}
?>